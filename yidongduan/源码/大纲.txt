flex布局（弹性布局）
				兼容情况
					IE10及以上、ios9及以上、android4.4及以上版本支持
				特点
					1、默认所有子元素都会在一行中显示，即使给子元素一个很大的宽度
					2、父级加了这条属性，子级的float、vertical-align就会失效
					3、如果兼容低版本的机型要加前缀-webkit-，包括后面讲的所有属性
					
					
				容器属性（父元素样式）
					flex-direction		子元素排列方向（主轴的方向）
					flex-wrap			换行方式
					flex-flow			以上两种方式的简写
					justify-content		水平对齐方式（子元素在主轴上的对齐方式）
					align-items			垂直对齐方式（子元素在交叉轴上的对齐方式）
					align-content		多行垂直对齐方式（多根轴线的对齐方式）
					
				项目属性（子元素样式）
					order				排列位置
					flex-grow			扩展比例
					flex-shrink			收缩比例
					flex-basis			元素的大小
					flex				以上三个属性的简写
					align-self			单独的垂直对齐方式（交叉轴方向上）
		-->
		

























<!--
			flex-direction			子元素排列方向
				row（默认值）		横着排，从左到右
										注意：给了这个属性，即使子元素的宽度之和要比父级大，它也会在一行中排列，并且会把子元素的宽度自动缩小
				row-reverse			横着排，从右到左
				column				竖着排，从上到下
				column-reverse		竖着排，从下到上
				
				注意：竖着排是把水平的主轴给旋转了90度（这个后面说到对齐的时候，会有用）
		-->
		
















<!--
			flex-wrap				子元素的换行方式
				nowrap（默认值）		不换行
										1、所有子元素始终都在一行显示，不管父级宽度能否放的下
										2、如果父级宽度放不下所有子元素，会把子元素宽度收缩（原理是后面要说的收缩比例）
				wrap				换行，第一行在上方（从上到下，正序）
				wrap-reverse		换行，第一行在下方（从下到上，倒序）
				
				注意：换行方式（flex-wrap）的优先级没有排列方式（flex-direction）的优先级高。如果给了排列方式后，再给换不换行都没有意义（像内嵌与行间样式一样）
		-->
		

















<!--
			justify-content				子元素的水平（主轴）对齐方式
				flex-start（默认值）		左对齐
				flex-end				右对齐
				center					居中对齐
				space-between			左右两端对齐，元素之间的间隔自动平分
				space-around			左右分散居中对齐，每个元素两侧的间隔相等
				
				注意：让元素竖着排，其实是把主轴旋转了90度，竖着排的元素依然可以使用justify-content去对齐
		-->
		















<!--
			align-items				子元素的垂直对齐方式
				flex-start				顶对齐
				flex-end				底对齐
				center					中心对齐
				baseline				子元素的第一行文字的基线对齐
		-->
		













<!--
			align-content				多行子元素的垂直对齐方式（如果只有一行，不生效）
				flex-start				顶部对齐，行与行之间没有间距
				flex-end				底部对齐，行与行之间没有间距
				center					中心对齐，行与行之间没有间距
				space-between			上下两端对齐，每行之间的间隔自动平分
				space-around			上下分散居中对齐，每行之间的间隔相等
				
				注意：
					1、如果元素是换行显示，控制的是上下的距离
					2、如果元素是竖着排（就是把主轴旋转了90度）控制的是左右的距离
		-->
		















<!--
			order				定义元素的排列顺序。数值越小，排列越靠前，默认为0
		-->